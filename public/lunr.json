{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/index.html",[0,1.203]],["body/index.html",[0,0.628,1,0.411,2,0.79,3,0.79,4,0.79,5,0.79,6,0.79,7,0.601,8,1.048,9,0.601,10,0.601,11,0.79,12,0.79,13,0.601,14,0.79,15,1.048,16,0.79,17,0.79,18,0.79,19,0.79,20,0.79]],["title/index.html#undefined",[0,0.882,1,0.174]],["body/index.html#undefined",[]],["title/index.html#简介",[1,0.238]],["body/index.html#简介",[0,1.636,1,0.323]],["title/index.html#架构",[1,0.238]],["body/index.html#架构",[1,0.346]],["title/index.html#场景",[1,0.238]],["body/index.html#场景",[1,0.346]],["title/index.html#功能",[1,0.238]],["body/index.html#功能",[1,0.406,2,1.097,3,1.097,4,1.097,5,1.097,6,1.097,7,0.834,8,1.386,9,0.834,10,0.834,11,1.097,12,1.097,13,0.834,14,1.097,15,1.386]],["title/index.html#社区",[1,0.238]],["body/index.html#社区",[1,0.355,16,2.564,17,2.564,18,2.564,19,2.564,20,2.564]],["title/docs/build.html",[0,0.882,1,0.174]],["body/docs/build.html",[1,0.343,21,1.413,22,1.379,23,1.379,24,1.379,25,2.312,26,1.379,27,1.895,28,1.379,29,1.379,30,1.379]],["title/docs/build.html#构建编译",[1,0.238]],["body/docs/build.html#构建编译",[1,0.269,21,1.24,22,2.992,23,2.992,24,2.992]],["title/docs/build.html#编译",[1,0.238]],["body/docs/build.html#编译",[21,1.396,25,2.284,26,3.368]],["title/docs/build.html#Docker打包",[27,2.279]],["body/docs/build.html#Docker打包",[21,1.396,25,2.284,27,2.905]],["title/docs/build.html#统计代码",[1,0.238]],["body/docs/build.html#统计代码",[21,1.396,25,2.284,28,3.368]],["title/docs/build.html#单元测试",[1,0.238]],["body/docs/build.html#单元测试",[1,0.323,21,1.116,25,2.436,29,2.692,30,2.692]],["title/docs/dev.html",[0,0.882,1,0.174]],["body/docs/dev.html",[1,0.373,15,2.155,31,2.834,32,2.834]],["title/docs/dev.html#开发指南",[1,0.238]],["body/docs/dev.html#开发指南",[]],["title/docs/dev.html#源码导读",[1,0.238]],["body/docs/dev.html#源码导读",[]],["title/docs/dev.html#插件开发",[1,0.238]],["body/docs/dev.html#插件开发",[]],["title/docs/dev.html#Hook开发",[15,2.008]],["body/docs/dev.html#Hook开发",[]],["title/docs/dev.html#InEnd开发",[31,2.642]],["body/docs/dev.html#InEnd开发",[]],["title/docs/dev.html#OutEnd开发",[32,2.642]],["body/docs/dev.html#OutEnd开发",[]],["title/docs/example.html",[0,0.882,1,0.174]],["body/docs/example.html",[1,0.386,13,0.889,21,0.484,33,1.169,34,1.169,35,1.169,36,1.169,37,0.889,38,1.169,39,1.169,40,1.169,41,1.169,42,1.169,43,2.833,44,1.169,45,1.169,46,1.169]],["title/docs/example.html#使用案例",[1,0.238]],["body/docs/example.html#使用案例",[]],["title/docs/example.html#利用树莓派实现温湿度监控",[1,0.238]],["body/docs/example.html#利用树莓派实现温湿度监控",[1,0.386,13,0.889,21,0.484,33,1.169,34,1.169,35,1.169,36,1.169,37,0.889,38,1.169,39,1.169,40,1.169,41,1.169,42,1.169,43,2.833,44,1.169,45,1.169,46,1.169]],["title/docs/preview.html",[0,0.882,1,0.174]],["body/docs/preview.html",[1,0.359,21,1.313,37,2.409]],["title/docs/preview.html#功能预览",[1,0.238]],["body/docs/preview.html#功能预览",[1,0.303,21,1.396,37,2.56]],["title/docs/release.html",[0,0.882,1,0.174]],["body/docs/release.html",[1,0.399,7,1.637,8,1.637,9,1.637,10,1.637,47,2.153]],["title/docs/release.html#版本发布",[1,0.238]],["body/docs/release.html#版本发布",[]],["title/docs/release.html#V0-0-1",[47,2.642]],["body/docs/release.html#V0-0-1",[1,0.399,7,1.779,8,1.779,9,1.779,10,1.779]]],"invertedIndex":[["",{"_index":1,"title":{"index.html#undefined":{},"index.html#简介":{},"index.html#架构":{},"index.html#场景":{},"index.html#功能":{},"index.html#社区":{},"docs/build.html":{},"docs/build.html#构建编译":{},"docs/build.html#编译":{},"docs/build.html#统计代码":{},"docs/build.html#单元测试":{},"docs/dev.html":{},"docs/dev.html#开发指南":{},"docs/dev.html#源码导读":{},"docs/dev.html#插件开发":{},"docs/example.html":{},"docs/example.html#使用案例":{},"docs/example.html#利用树莓派实现温湿度监控":{},"docs/preview.html":{},"docs/preview.html#功能预览":{},"docs/release.html":{},"docs/release.html#版本发布":{}},"body":{"index.html":{},"index.html#简介":{},"index.html#架构":{},"index.html#场景":{},"index.html#功能":{},"index.html#社区":{},"docs/build.html":{},"docs/build.html#构建编译":{},"docs/build.html#单元测试":{},"docs/dev.html":{},"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{},"docs/preview.html":{},"docs/preview.html#功能预览":{},"docs/release.html":{},"docs/release.html#V0-0-1":{}}}],["0",{"_index":43,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["1",{"_index":21,"title":{},"body":{"docs/build.html":{},"docs/build.html#构建编译":{},"docs/build.html#编译":{},"docs/build.html#Docker打包":{},"docs/build.html#统计代码":{},"docs/build.html#单元测试":{},"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{},"docs/preview.html":{},"docs/preview.html#功能预览":{}}}],["2",{"_index":37,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{},"docs/preview.html":{},"docs/preview.html#功能预览":{}}}],["3",{"_index":38,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["30的时候保存进mongodb",{"_index":34,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["4",{"_index":39,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["475512169",{"_index":17,"title":{},"body":{"index.html":{},"index.html#社区":{}}}],["5",{"_index":40,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["50",{"_index":33,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["500的时候将其替换成0",{"_index":36,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["50而且湿度小于30的时候保存到mysql",{"_index":35,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["6",{"_index":41,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["751957846@qq.com",{"_index":19,"title":{},"body":{"index.html":{},"index.html#社区":{}}}],["activemq",{"_index":14,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["bignullnul",{"_index":20,"title":{},"body":{"index.html":{},"index.html#社区":{}}}],["build",{"_index":26,"title":{},"body":{"docs/build.html":{},"docs/build.html#编译":{}}}],["cloc",{"_index":28,"title":{},"body":{"docs/build.html":{},"docs/build.html#统计代码":{}}}],["clone",{"_index":23,"title":{},"body":{"docs/build.html":{},"docs/build.html#构建编译":{}}}],["cnwwhai@gmail.com",{"_index":18,"title":{},"body":{"index.html":{},"index.html#社区":{}}}],["co2",{"_index":45,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["coap",{"_index":4,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["cover",{"_index":29,"title":{},"body":{"docs/build.html":{},"docs/build.html#单元测试":{}}}],["docker",{"_index":27,"title":{"docs/build.html#Docker打包":{}},"body":{"docs/build.html":{},"docs/build.html#Docker打包":{}}}],["git",{"_index":22,"title":{},"body":{"docs/build.html":{},"docs/build.html#构建编译":{}}}],["golang",{"_index":30,"title":{},"body":{"docs/build.html":{},"docs/build.html#单元测试":{}}}],["grpc",{"_index":6,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["hook",{"_index":15,"title":{"docs/dev.html#Hook开发":{}},"body":{"index.html":{},"index.html#功能":{},"docs/dev.html":{}}}],["http",{"_index":3,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["https://github.com/wwhai/rulenginex.git",{"_index":24,"title":{},"body":{"docs/build.html":{},"docs/build.html#构建编译":{}}}],["hum",{"_index":44,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["inend",{"_index":31,"title":{"docs/dev.html#InEnd开发":{}},"body":{"docs/dev.html":{}}}],["jq",{"_index":8,"title":{},"body":{"index.html":{},"index.html#功能":{},"docs/release.html":{},"docs/release.html#V0-0-1":{}}}],["kafka",{"_index":13,"title":{},"body":{"index.html":{},"index.html#功能":{},"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["lex",{"_index":46,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["lua",{"_index":7,"title":{},"body":{"index.html":{},"index.html#功能":{},"docs/release.html":{},"docs/release.html#V0-0-1":{}}}],["make",{"_index":25,"title":{},"body":{"docs/build.html":{},"docs/build.html#编译":{},"docs/build.html#Docker打包":{},"docs/build.html#统计代码":{},"docs/build.html#单元测试":{}}}],["mongodb",{"_index":10,"title":{},"body":{"index.html":{},"index.html#功能":{},"docs/release.html":{},"docs/release.html#V0-0-1":{}}}],["mqtt",{"_index":2,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["mysql",{"_index":12,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["outend",{"_index":32,"title":{"docs/dev.html#OutEnd开发":{}},"body":{"docs/dev.html":{}}}],["qq",{"_index":16,"title":{},"body":{"index.html":{},"index.html#社区":{}}}],["redi",{"_index":11,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["rulex",{"_index":0,"title":{"index.html":{},"index.html#undefined":{},"docs/build.html":{},"docs/dev.html":{},"docs/example.html":{},"docs/preview.html":{},"docs/release.html":{}},"body":{"index.html":{},"index.html#简介":{}}}],["select",{"_index":9,"title":{},"body":{"index.html":{},"index.html#功能":{},"docs/release.html":{},"docs/release.html#V0-0-1":{}}}],["temp",{"_index":42,"title":{},"body":{"docs/example.html":{},"docs/example.html#利用树莓派实现温湿度监控":{}}}],["udp",{"_index":5,"title":{},"body":{"index.html":{},"index.html#功能":{}}}],["v0.0.1",{"_index":47,"title":{"docs/release.html#V0-0-1":{}},"body":{"docs/release.html":{}}}]],"pipeline":["stemmer"]},"store":{"index.html":{"title":"RuleX","path":"/hexo-theme-doc/index.html","body":"RuleX: 轻量级物联网数据处理引擎 简介 RuleX 是一个轻量级规则引擎,主要用来中转上游数据和吐出数据到目标点，可以理解为一个数据路由器。主要被设计用来做物联网网关或者服务端存在数据筛选的场景。 架构 规则引擎本质上是个流处理器，数据被视为流，然后经过规则引擎后，被层层处理，最后交给回调函数处理,基础架构图如图所示: 场景 可用在灵活多变的数据处理场景下的嵌入式物联网网关，或者是服务器端。 功能 数据入口 MQTT 数据入口 HTTP 数据入口 COAP 数据入口 UDP 数据入口 GRPC 数据入口 特色功能 LUA 自定义业务逻辑脚本支持 JQ Select 支持用Jq来做字段筛选 数据出口 数据持久化到 MongoDB 数据持久化到 Redis 数据持久化到 Mysql 数据转发 Kafka 数据转发 ActiveMQ 插件系统 规则引擎提供了插件机制，用户可自己编写插件来进行扩展. Hook 机制 规则引擎提供了插件机制，用户可自己编写 Hook 来进行更灵活的自定义数据处理. 目前使劲开发中,更多功能敬请期待… 社区 QQ群: 475512169 邮箱: cnwwhai@gmail.com ; 751957846@qq.com 微信: bignullnull"},"index.html#undefined":{"title":"RuleX: 轻量级物联网数据处理引擎","path":"/hexo-theme-doc/index.html#undefined","body":""},"index.html#简介":{"title":"简介","path":"/hexo-theme-doc/index.html#简介","body":"RuleX 是一个轻量级规则引擎,主要用来中转上游数据和吐出数据到目标点，可以理解为一个数据路由器。主要被设计用来做物联网网关或者服务端存在数据筛选的场景。"},"index.html#架构":{"title":"架构","path":"/hexo-theme-doc/index.html#架构","body":"规则引擎本质上是个流处理器，数据被视为流，然后经过规则引擎后，被层层处理，最后交给回调函数处理,基础架构图如图所示:"},"index.html#场景":{"title":"场景","path":"/hexo-theme-doc/index.html#场景","body":"可用在灵活多变的数据处理场景下的嵌入式物联网网关，或者是服务器端。"},"index.html#功能":{"title":"功能","path":"/hexo-theme-doc/index.html#功能","body":"数据入口 MQTT 数据入口 HTTP 数据入口 COAP 数据入口 UDP 数据入口 GRPC 数据入口 特色功能 LUA 自定义业务逻辑脚本支持 JQ Select 支持用Jq来做字段筛选 数据出口 数据持久化到 MongoDB 数据持久化到 Redis 数据持久化到 Mysql 数据转发 Kafka 数据转发 ActiveMQ 插件系统 规则引擎提供了插件机制，用户可自己编写插件来进行扩展. Hook 机制 规则引擎提供了插件机制，用户可自己编写 Hook 来进行更灵活的自定义数据处理. 目前使劲开发中,更多功能敬请期待…"},"index.html#社区":{"title":"社区","path":"/hexo-theme-doc/index.html#社区","body":"QQ群: 475512169 邮箱: cnwwhai@gmail.com ; 751957846@qq.com 微信: bignullnull"},"docs/build.html":{"title":"RuleX-构建编译","path":"/hexo-theme-doc/docs/build.html","body":"构建编译 首先需要克隆代码到本地: 1 git clone https://github.com/wwhai/rulenginex.git 编译 1 make build Docker打包 1 make docker 统计代码 1 make clocs 单元测试 1 make cover 本地需要有 Golang 的环境和 Make工具链"},"docs/build.html#构建编译":{"title":"构建编译","path":"/hexo-theme-doc/docs/build.html#构建编译","body":"首先需要克隆代码到本地: 1 git clone https://github.com/wwhai/rulenginex.git"},"docs/build.html#编译":{"title":"编译","path":"/hexo-theme-doc/docs/build.html#编译","body":"1 make build"},"docs/build.html#Docker打包":{"title":"Docker打包","path":"/hexo-theme-doc/docs/build.html#Docker打包","body":"1 make docker"},"docs/build.html#统计代码":{"title":"统计代码","path":"/hexo-theme-doc/docs/build.html#统计代码","body":"1 make clocs"},"docs/build.html#单元测试":{"title":"单元测试","path":"/hexo-theme-doc/docs/build.html#单元测试","body":"1 make cover 本地需要有 Golang 的环境和 Make工具链"},"docs/dev.html":{"title":"RuleX-开发指南","path":"/hexo-theme-doc/docs/dev.html","body":"开发指南 源码导读 插件开发 Hook开发 InEnd开发 OutEnd开发"},"docs/dev.html#开发指南":{"title":"开发指南","path":"/hexo-theme-doc/docs/dev.html#开发指南","body":""},"docs/dev.html#源码导读":{"title":"源码导读","path":"/hexo-theme-doc/docs/dev.html#源码导读","body":""},"docs/dev.html#插件开发":{"title":"插件开发","path":"/hexo-theme-doc/docs/dev.html#插件开发","body":""},"docs/dev.html#Hook开发":{"title":"Hook开发","path":"/hexo-theme-doc/docs/dev.html#Hook开发","body":""},"docs/dev.html#InEnd开发":{"title":"InEnd开发","path":"/hexo-theme-doc/docs/dev.html#InEnd开发","body":""},"docs/dev.html#OutEnd开发":{"title":"OutEnd开发","path":"/hexo-theme-doc/docs/dev.html#OutEnd开发","body":""},"docs/example.html":{"title":"RuleX-使用案例","path":"/hexo-theme-doc/docs/example.html","body":"使用案例 利用树莓派实现温湿度监控 需求: 网关为树莓派，接受来自传感器的数据，数据上传后要求以下规则进行处理： 当温度大于50度时转发到 Kafka 当湿度小于30的时候保存进MongoDb 当二氧化炭浓度大于50而且湿度小于30的时候保存到Mysql 当光照强度大于500的时候将其替换成0 其中数据结构如下: 1 2 3 4 5 6  \"temp\" : 0 , \"hum\" : 0 , \"co2\" : 0 , \"lex\" : 0  编写规则 ….待完善"},"docs/example.html#使用案例":{"title":"使用案例","path":"/hexo-theme-doc/docs/example.html#使用案例","body":""},"docs/example.html#利用树莓派实现温湿度监控":{"title":"利用树莓派实现温湿度监控","path":"/hexo-theme-doc/docs/example.html#利用树莓派实现温湿度监控","body":"需求: 网关为树莓派，接受来自传感器的数据，数据上传后要求以下规则进行处理： 当温度大于50度时转发到 Kafka 当湿度小于30的时候保存进MongoDb 当二氧化炭浓度大于50而且湿度小于30的时候保存到Mysql 当光照强度大于500的时候将其替换成0 其中数据结构如下: 1 2 3 4 5 6 { \"temp\" : 0 , \"hum\" : 0 , \"co2\" : 0 , \"lex\" : 0 } 编写规则 ….待完善"},"docs/preview.html":{"title":"RuleX-功能预览","path":"/hexo-theme-doc/docs/preview.html","body":"功能预览 基础界面1 基础界面2 上面的界面仅仅为了显示一些基础信息，更精致的界面可以自己集成到应用程序中实现。"},"docs/preview.html#功能预览":{"title":"功能预览","path":"/hexo-theme-doc/docs/preview.html#功能预览","body":"基础界面1 基础界面2 上面的界面仅仅为了显示一些基础信息，更精致的界面可以自己集成到应用程序中实现。"},"docs/release.html":{"title":"RuleX-版本发布","path":"/hexo-theme-doc/docs/release.html","body":"版本发布 V0.0.1 支持数据持久化到 MongoDb 支持 Lua 脚本 支持 Jq Select 表达式 [下载地址]"},"docs/release.html#版本发布":{"title":"版本发布","path":"/hexo-theme-doc/docs/release.html#版本发布","body":""},"docs/release.html#V0-0-1":{"title":"V0.0.1","path":"/hexo-theme-doc/docs/release.html#V0-0-1","body":"支持数据持久化到 MongoDb 支持 Lua 脚本 支持 Jq Select 表达式 [下载地址]"}}}